/*doc
---
title: Layout
name: layout
category: Core
---
TK
*/



/*doc
---
title: Doc stripe
name: docStripe
parent: layout
---
TK
*/
.docStripe {
	overflow: hidden;
	border-top: 1px solid $C_border;
	background-color: #fff;
}

.docStripe--collection {
	background: $C_collectionBGLight;
}

.docStripe--inverted {
	background: $C_contentBGInverted;
}


/*doc
---
title: Doc bounds
name: docBounds
parent: layout
---
TK
*/
.docBounds {
	@extend %clearfix;
	box-sizing: border-box;
	margin-left: auto;
	margin-right: auto;
	max-width: $docBounds;
	padding: $space;
	width: 100%;
}

/*doc
---
title: Flex row
name: flexRow
parent: layout
---
Arranges content in rows using `display: flex`.

The `.flexrow` class is applied to a wrapping element.

Direct children of `.flexrow` are flex children, and require
either a `.flexrow-item--grow` or `.flexrow-item--shirnk` class.

The flex children in flexrow do not have a `flex-basis` set; a
basis is not required for most common layout tasks.

_Includes `table-cell` fallback for IE8._

#### Examples:

```html_example
<div class="flexrow">
	<div class="_DOC-SHADE flexrow-item--grow flexrow-item--gutterLeft">Item 1</div>
	<div class="_DOC-SHADE flexrow-item--shrink">Item 2</div>
	<div class="_DOC-SHADE flexrow-item--shrink">Item 3</div>
	<div class="_DOC-SHADE flexrow-item--grow">Item 4</div>
</div>
```

```html_example
<div class="flexrow">
	<div class="_DOC-SHADE flexrow-item--shrink flexrow-item--gutterBoth">Item 1</div>
	<div class="_DOC-SHADE flexrow-item--grow">Item 2</div>
	<div class="_DOC-SHADE flexrow-item--shrink">Item 3</div>
</div>
```

```html_example
<div class="flexrow flexrow--flexEnd">
	<div class="_DOC-SHADE flexrow-item--shrink flexrow-item--gutterBoth">Item 1</div>
	<div class="_DOC-SHADE flexrow-item--shrink flexrow-item--gutterBoth">Item 2</div>
	<div class="_DOC-SHADE flexrow-item--shrink flexrow-item--gutterBoth">Item 3</div>
</div>
```

```html_example
<div class="flexrow flexrow--spaceBetween flexrow--reverse">
	<div class="_DOC-SHADE flexrow-item--shrink">Item 1</div>
	<div class="_DOC-SHADE flexrow-item--shrink">Item 2</div>
	<div class="_DOC-SHADE flexrow-item--shrink">Item 3</div>
	<div class="_DOC-SHADE flexrow-item--shrink">Item 4</div>
</div>
```
*/
.flexrow {
	@include display(flex);
	@include flex-wrap(nowrap);
	@include flex-direction(row);
	@include justify-content(flex-start);
	@include align-items(center);
}


/*doc
---
title: flexrow variants
name: flexrowParent
parent: flexRow
---

A class of `.flexrow` is __required__ on the flexrow parent. The
following classes are optional variants:

Class                       | Description
--------------------------- | -------------------------------
`.flexrow--reverse`         | reverses row order
`.flexrow--flexEnd`         | justifies content to `flex-end`
`.flexrow--center`          | justifies content to `center`
`.flexrow--spaceBetween`    | justifies content to `spaceBetween`
`.flexrow--spaceAround`     | justifies content to `spaceAround`
`.flexrow--wrapAt[breakpoint]`| allows wrapping at a given breakpoint (Small, Medium, Large)
*/
.flexrow--reverse {
	@include flex-direction(row-reverse);
}
@each $jName, $jprop in $flexJustify-map {
	.flexrow--#{$jName} {
		@include justify-content($jprop);
	}
}
@each $bp in (large, medium, small) {
	@include atMediaDown($bp) {
		.flexrow--wrapAt#{capitalizeFirstLetter($bp)} {
			@include flex-wrap(wrap);
		}
	}
}

/*doc
---
title: flexrow-item variants
name: flexrowChild
parent: flexRow
---

A class of `.flexrow-item--shirnk` or `.flexrow-item--grow` on
flexrow children is __required__. The following classes are optional variants:

Class                         | Description
----------------------------- | -------------------------------
`.flexrow-item--gutterRight`  | adds `padding-right` to item
`.flexrow-item--gutterLeft`   | adds `padding-left` to item
`.flexrow-item--gutterBoth`   | adds `padding-both` sides of item
*/
.flexrow-item--gutterRight {
	padding-right: $space;
}
.flexrow-item--gutterLeft {
	padding-left: $space;
}
.flexrow-item--gutterBoth {
	padding: 0 $space;
}

// flexrow item shirnk/grow variants
.flexrow-item--shrink {
	@include flex-shrink(1);
}
.flexrow-item--grow {
	@include flex-grow(1);
}

// LT IE9 fallback
.lt--IE9 .flexrow {
	@include box-sizing(border-box);
	display: table;
	table-layout: auto;
	width: 100%;
}
.lt--IE9 .flexrow-item--shrink,
.lt--IE9 .flexrow-item--grow {
	display: table-cell;
}
.lt--IE9 .flexrow-item--grow {
	width: 100%;
}

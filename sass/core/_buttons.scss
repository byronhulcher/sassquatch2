/*doc
---
title: Buttons
name: buttons
category: Buttons
---
TK
*/

// TODO: rewrite with less nesting
// variant classes shouldn't be selected as .base.base--variant
.#{$btn-name} {
  // Default styles
  @include buttonColor(rgba(0,0,0,0));
  border-radius: 50px;
  border: none;
  box-sizing: border-box;
  color: map-get($btn-variants, "primary");
  cursor: pointer;
  display: inline-block;
  font-size: $font-size;
  font-weight: $W_bold;
  margin: $space-half $space-quarter;
  padding: $space-half $space;
  text-align: center;
  transition: background .15s;

  i {
    margin-right: $space-half;
  }

  //
  // Kinds of buttons
  // TODO: could we just use the $btn-variants list to generate this?
  &--bordered {
    @include buttonColor(map-get($btn-variants, "primary"), $btn-border);
    font-weight: $W_normal;

    &:hover,
    &:active,
    &:focus {
      background: transparentize(map-get($btn-variants, "primary"), .8);
    }

  }

  &--contrast {
    color: $C_textPrimary;
    font-weight: $W_bold;
  }

  //
  // Icon button - icon in a circle with label below
  //
  &--iconButton {
    font-weight: $W_normal;
    padding: 0;
    i {
      border: 1px solid map-get($btn-variants, "primary");
      border-radius: 999px;
      color: map-get($btn-variants, "primary");
      display: block;
      font-size: $media-xs;
      height: $media-xs;
      margin: 0 auto;
      padding: $space-half;
      width: $media-xs;
    }
    &:hover, &:focus, &:active {
      background: transparent;
      text-decoration: none;
    }
  }

  //
  // Button size modifiers
  //
  &--small {
    font-size: $font-size-small;
    padding: $space-quarter $space-half;
  }

  &--full-width {
    display: block;
    margin: $space-half 0;
    width: 100%;
  }

  @each $key, $value in $btn-variants {
    &--#{$key} {
      @include buttonColor($value);
    }
  }
}

// Toggle button behavior - try and find a way to bring this into regular button style area
.toggle-button-wrapper {
  display: inline-block;
  margin: $space-quarter 0;
  -webkit-tap-highlight-color: rgba(0,0,0,0);
  label {
    margin: 0;
  }
  input {
    display: none;
    &:checked + label {
      background: $C_blue;
      border: none;
      color: $C_textPrimaryInverted;
    }
  }

}

//TODO: parameterize animation times in _globals
//TODO: use mixin
.toggle-on {
	@include animate--bounceInSubtle();
	label {
		font-weight: $W_bold;
	}
}
